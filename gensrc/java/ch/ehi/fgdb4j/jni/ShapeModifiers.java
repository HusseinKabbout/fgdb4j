/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ch.ehi.fgdb4j.jni;

public enum ShapeModifiers {
  shapeHasZs((-2147483647-1)),
  shapeHasMs(1073741824),
  shapeHasCurves(536870912),
  shapeHasIDs(268435456),
  shapeHasNormals(134217728),
  shapeHasTextures(67108864),
  shapeHasPartIDs(33554432),
  shapeHasMaterials(16777216),
  shapeIsCompressed(8388608),
  shapeModifierMask(-16777216),
  shapeMultiPatchModifierMask(15728640),
  shapeBasicTypeMask(255),
  shapeBasicModifierMask(-1073741824),
  shapeNonBasicModifierMask(1056964608),
  shapeExtendedModifierMask(-587202560);

  public final int swigValue() {
    return swigValue;
  }

  public static ShapeModifiers swigToEnum(int swigValue) {
    ShapeModifiers[] swigValues = ShapeModifiers.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (ShapeModifiers swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + ShapeModifiers.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private ShapeModifiers() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private ShapeModifiers(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private ShapeModifiers(ShapeModifiers swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

