/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ch.ehi.fgdb4j.jni;

public class ShapeBuffer {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ShapeBuffer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ShapeBuffer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        fgbd4jJNI.delete_ShapeBuffer(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ShapeBuffer(long length) {
    this(fgbd4jJNI.new_ShapeBuffer__SWIG_0(length), true);
  }

  public ShapeBuffer() {
    this(fgbd4jJNI.new_ShapeBuffer__SWIG_1(), true);
  }

  public boolean IsEmpty() {
    return fgbd4jJNI.ShapeBuffer_IsEmpty(swigCPtr, this);
  }

  public void SetEmpty() {
    fgbd4jJNI.ShapeBuffer_SetEmpty(swigCPtr, this);
  }

  public int GetShapeType(int[] shapeType) {
    return fgbd4jJNI.ShapeBuffer_GetShapeType(swigCPtr, this, shapeType);
  }

  public int GetGeometryType(int[] geometryType) {
    return fgbd4jJNI.ShapeBuffer_GetGeometryType__SWIG_0(swigCPtr, this, geometryType);
  }

  public static boolean HasZs(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasZs(shapeType.swigValue());
  }

  public static boolean HasMs(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasMs(shapeType.swigValue());
  }

  public static boolean HasIDs(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasIDs(shapeType.swigValue());
  }

  public static boolean HasCurves(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasCurves(shapeType.swigValue());
  }

  public static boolean HasNormals(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasNormals(shapeType.swigValue());
  }

  public static boolean HasTextures(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasTextures(shapeType.swigValue());
  }

  public static boolean HasMaterials(ShapeType shapeType) {
    return fgbd4jJNI.ShapeBuffer_HasMaterials(shapeType.swigValue());
  }

  public static GeometryType GetGeometryType(ShapeType shapeType) {
    return GeometryType.swigToEnum(fgbd4jJNI.ShapeBuffer_GetGeometryType__SWIG_1(shapeType.swigValue()));
  }

  public void setBuffer(byte[] ShapeBufferIN) {
    fgbd4jJNI.ShapeBuffer_setBuffer(swigCPtr, this, ShapeBufferIN);
  }

  public byte[] getBuffer() {
    return fgbd4jJNI.ShapeBuffer_getBuffer(swigCPtr, this);
  }

}
